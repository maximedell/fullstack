services:
  backend:
    build:
      context: ./backend
    container_name: backend
    command: gunicorn --workers 3 --bind 0.0.0.0:8000 backend.wsgi:application
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/home/app/web/media
    expose:
      - 8000
    env_file:
      - ./backend/.env
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
    expose:
      - 3000
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - backend

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: postgres:13
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword

volumes:
  postgres_data:
  static_volume:
  media_volume:
